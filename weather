_G.TestMode = true
_G.stopLyrics = false
_G.isEnabled = true
_G.DONOTEXECUTE = false

if game.Players.LocalPlayer.PlayerGui:FindFirstChild("LyricGui") then
    game.Players.LocalPlayer.PlayerGui.LyricGui:Destroy()
end

if game.SoundService:FindFirstChild("weathergirl LMS") then
    game.SoundService["weathergirl LMS"]:Destroy()
end

local TweenService = game:GetService("TweenService")

local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer.PlayerGui
gui.Name = "LyricGui"
gui.ResetOnSpawn = false
gui.Enabled = true

local label = Instance.new("TextLabel")
label.Parent = gui
label.Name = "LyricLabel"
label.Font = Enum.Font.Merriweather
label.TextScaled = true
label.BackgroundTransparency = 1
label.TextTransparency = 1
label.TextStrokeTransparency = 0
label.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
label.Size = UDim2.new(0.8, 0, 0.15, 0)
label.Visible = true

-- === RANDOM POSITIONS ===
local posList = {
	UDim2.new(0.177, 0, 0.112, 0),
	UDim2.new(0.02, 0, 0.74, 0),
	UDim2.new(0.177, 0, 0.575, 0),
	UDim2.new(0.019, 0, 0.171, 0),
	UDim2.new(0.184, 0, 0.355, 0),
	UDim2.new(0.035, 0, 0.259, 0),
	UDim2.new(0.191, 0, 0.026, 0),
}
local lastIndex

local function getPosition(forced)
	if forced then return forced end
	local index
	repeat
		index = math.random(1, #posList)
	until index ~= lastIndex
	lastIndex = index
	return posList[index]
end

local function circleMotion(center, duration, radius, speed)
	speed = speed or math.rad(30)
	local startTime = tick()
	while tick() - startTime < duration do
		local angle = (tick() - startTime) * speed
		local offsetX = math.cos(angle) * radius
		local offsetY = math.sin(angle) * radius
		label.Position = center + UDim2.fromOffset(offsetX, offsetY)
		task.wait(0.05)
	end
end

local function showLyric(lyricData, sound)
	if not sound.IsPlaying or _G.stopLyrics then return end

	local duration = lyricData.duration or 3
	local waitAfter = lyricData.waitAfter or 0
	local color = lyricData.color or Color3.fromRGB(255, 255, 255)
	local forcedPos = lyricData.forcedPos
	local transparent = lyricData.transparent or 0

	label.Text = lyricData.text
	label.TextColor3 = color
	label.TextStrokeColor3 = color
	label.TextStrokeTransparency = transparent
	label.Position = getPosition(forcedPos)
	label.TextTransparency = transparent

	task.spawn(function()
		circleMotion(label.Position, duration, 20, math.rad(120))
	end)

	local startTime = tick()
	while tick() - startTime < duration do
		if not sound.IsPlaying or _G.stopLyrics then return end
		task.wait(0.1)
	end

	if lyricData.fade and not _G.stopLyrics then
		TweenService:Create(label, TweenInfo.new(1), {TextTransparency = 1}):Play()
		task.wait(1)
	end

	task.wait(waitAfter)
end

local lyrics = {
	{text = "", duration = 50.5, waitAfter = 0}, -- wait intro
	{text = "Shimmering night sky", duration = 1},
	{text = "casts its light", duration = 1},
	{text = "Hopelessly trying to", duration = 1},
	{text = "survive", duration = 0.2, forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "survive", duration = 0.9, color = Color3.fromRGB(255, 0, 0), forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "Eternally trapped inside", duration = 1.25},
	{text = "What we call our light", duration = 1.6},
	{text = "Again and again you'll", duration = 1.4},
	{text = "try", duration = 0.1, forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "try", duration = 0.7, color = Color3.fromRGB(255, 0, 0), forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "(oooh)", duration = 1, color = Color3.fromRGB(129,129,129), transparent = 0.7, forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "Running ain't an option", duration = 1},
	{text = "and you know your options are running dry", duration = 2.5},
	{text = "The weather forecast's calling for an", duration = 2.25},
	{text = "everlasting night", duration = 0.1, forcedPos = UDim2.new(0.1,0,0.4,0)},
	{text = "everlasting night", duration = 3.58, waitAfter = 7, color = Color3.fromRGB(255, 0, 0), fade = true, forcedPos = UDim2.new(0.1,0,0.4,0)},
}

local sound = Instance.new("Sound")
sound.Parent = game.SoundService
sound.Name = "weathergirl LMS"
sound.Looped = false
sound.SoundId = getcustomasset("forsakenweather/weathergirlLMS.mp3")

local function PlayLyricsWithSound(sounds)
	if not sound then return end
	_G.stopLyrics = false
	task.spawn(function()
		for i = 1, #lyrics do
			if not sounds.IsPlaying or _G.stopLyrics then break end
			showLyric(lyrics[i], sound)
		end
	end)
end

if connection then
	connection:Disconnect()
	connection = nil
end

if _G.DONOTEXECUTE then
	return
else
	if isfolder and makefolder and writefile and isfile and request and getcustomasset then
		if not isfolder("forsakenweather") then
			makefolder("forsakenweather")
		end

		if not isfile("forsakenweather/weathergirlLMS.mp3") then
			local soundData = request({
				Method="GET",
				Url="https://files.catbox.moe/oaat1o.mp3"
			}).Body
			if soundData then
				writefile("forsakenweather/weathergirlLMS.mp3", soundData)
			else
				return
			end
		end

		local position: Folder = workspace:FindFirstChild("Themes")
		if position then
			connection = position.ChildAdded:Connect(function(child)
				if child:IsA("Sound") and child.Name == "LastSurvivor" then
					if child.SoundId == "rbxassetid://71057332615441" then
						if _G.isEnabled then
							child.SoundId = getcustomasset("forsakenweather/weathergirlLMS.mp3", false)
							child.Volume = 1.5
							PlayLyricsWithSound(child)

							child.Ended:Connect(function() _G.stopLyrics = true label.Text = "" end)
							child.AncestryChanged:Connect(function(_, parent)
								if not parent then _G.stopLyrics = true label.Text = "" end
							end)
						else
							if connection then
								connection:Disconnect()
								connection = nil
							end
						end
					end
				end
			end)
		end
	end
end

if _G.TestMode == true then
local weather = Instance.new("TextButton")
weather.Name = "weathertest"
weather.Size = UDim2.new(0, 50, 0, 50)
weather.Position = UDim2.new(0, 10, 0, 10)
weather.BackgroundColor3 = Color3.fromRGB(51, 103, 245)
weather.TextColor3 = Color3.new(1, 1, 1)
weather.TextScaled = true
weather.Parent = gui
weather.Text = "test"
weather.Visible = true

weather.MouseButton1Click:Connect(function()
	if not sound.IsPlaying then
		sound:Play()
		PlayLyricsWithSound(sound)
	end
end)
end

sound.Ended:Connect(function()
	_G.stopLyrics = true
	label.Text = ""
end)

sound.AncestryChanged:Connect(function(_, parent)
	if not parent then
		_G.stopLyrics = true
		label.Text = ""
	end
end)
